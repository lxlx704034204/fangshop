package com.fang.fangshop.web.controller;

import java.util.Collection;

import javax.servlet.http.HttpSession;

import com.fang.fangshop.core.common.MD5;
import com.fang.fangshop.core.common.ManageContainer;
import com.fang.fangshop.core.common.PageModel;
import com.fang.fangshop.system.been.MenuItem;
import com.fang.fangshop.system.been.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import com.fang.fangshop.services.IMenuService;
import com.fang.fangshop.services.IUserService;
import com.fang.fangshop.services.impl.RoleServiceImpl;

@Controller
//@RequestMapping("/manage/user")
public class UserController {
	@Autowired
	private IMenuService menuService;
	@Autowired
	private IUserService userService;
	@Autowired
	private RoleServiceImpl roleService;
	
	/**
	 * GET 请求登录   从地址栏直接登录
	 * @param e
	 * @param session
	 * @return
	 */
	@RequestMapping("/login")
	public String login(@ModelAttribute("e") User e, HttpSession session){
		return "manage/system/login";
	}

	/**
	 * 表单提交登录
	 * @param session
	 * @param e
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="login",method=RequestMethod.POST)
	public String login(HttpSession session,@ModelAttribute("e") User e,Model model) throws Exception{
		//获取输入的用户名和密码
		String userName=e.getUsername();
		String password=e.getPassword();
		if(e!=null && !userName.isEmpty() &&  !password.isEmpty()){
			//将 密码 进行 MD5 加密
			e.setPassword(MD5.convertToMd5(e.getPassword()));
			User user = userService.selectOne(e);
			if(user!=null){
				Collection<MenuItem> menuItems = loadMenuData(user);
				//将 菜单信息 放入  session 中
				session.setAttribute("userMenus", menuItems);
				session.setAttribute(ManageContainer.manage_session_user_info, user);
				session.setMaxInactiveInterval(3600*2);
				return "redirect:/manage/home/index";
			}else{
				model.addAttribute("errorMsg", "输入的用户名和密码有误！");
			}	
		}else if(userName.isEmpty() || password.isEmpty()){
			model.addAttribute("errorMsg", "请输入用户名和密码！");
		}
		return "manage/system/login";
	}
	
	@RequestMapping(value="selectList" , method = RequestMethod.GET)
	public String selectList(){
		return "manage/system/user/userList";
	}
	
	/**
	 * 分页获取用户列表
	 * @param e
	 * @return
	 */
	@RequestMapping(value="loadUserListData" , method = RequestMethod.POST)
	@ResponseBody
	public PageModel loadUserListData(@ModelAttribute("e") User e){
		PageModel pager = new PageModel();
		pager = userService.selectPageList(e);
		return pager;
	}
	
	/**
	 * 注销登录
	 * @param session
	 * @return
	 */
	@RequestMapping("logout")
	public String loginOut(HttpSession session,@ModelAttribute("e") User e){
		e=null;
		return "manage/system/login";
		
	}
	
	/**
	 * 加载菜单
	 * @param user
	 * @return
	 */
	private Collection<MenuItem> loadMenuData(User user){
		Collection<MenuItem> userMenus = menuService.getMenus(user);
		return userMenus;
	}
	
    @RequestMapping("toAdd")
    public String toAdd(@ModelAttribute("e") User e,ModelMap modelMap){
    	modelMap.addAttribute("roles", roleService.selectList(e.getRole()));
    	modelMap.addAttribute("user",e);
    	return "manage/system/user/editUser";
    }
    
    @RequestMapping("save")
    public String save(@ModelAttribute("e") User e,HttpSession session){
    	if(session != null){
    		if(e.getId()!=null && e.getId()!=""){
        		User sessionUser =(User) session.getAttribute(ManageContainer.manage_session_user_info);
        		e.setUpdateaccount(sessionUser.getUsername());
        		userService.update(e);
        	}else{
            	userService.insert(e);
        	}
		} 
    	return "manage/system/user/userList";
    }
}
